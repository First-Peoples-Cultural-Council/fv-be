name: Build FV-BE
on:
  push:
    branches:
      - dev
      - main
      - migrate-kaniko-build
    tags:
      - 'r-*'
  pull_request:
    branches:
      - dev
      - main

jobs:
  build_with_quemu_buildx:
    runs-on: ubuntu-22.04
    name: Dev Build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
      - name: Build and push arm64 images
        uses: ./.github/actions/build
        with:
          pathToDockerFile: ./Dockerfile
          pathToContext: ./
          image: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}.dkr.ecr.${{  secrets.FPCC_DEFAULT_AWS_REGION  }}.amazonaws.com/fv-be:testabc123
          staticImage: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}.dkr.ecr.${{  secrets.FPCC_DEFAULT_AWS_REGION  }}.amazonaws.com/fv-be-static:testabc123

#  image_scan:
#    name: Image Scan
#    environment: dev
#    runs-on: ubuntu-22.04
#    needs: check_helm_chart_diff-dev
#    if: ((github.ref == 'refs/heads/dev') && (github.event_name != 'pull_request'))
#    steps:
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
#      - name: "Run image scan"
#        run: |
#          aws ecr start-image-scan --repository-name ${{ secrets.ECR_REPO_NAME }} --image-id imageTag=build-${{ github.head_ref }}${{ github.sha }}
#          aws ecr wait image-scan-complete --repository-name ${{ secrets.ECR_REPO_NAME }} --image-id imageTag=build-${{ github.head_ref }}${{ github.sha }}
#          echo "List of findings are below"
#          aws ecr describe-image-scan-findings --image-id imageTag=build-${{ github.head_ref }}${{ github.sha }} --repository-name ${{ secrets.ECR_REPO_NAME }} | jq .imageScanFindings.findings
#          aws ecr describe-image-scan-findings --image-id imageTag=build-${{ github.head_ref }}${{ github.sha }} --repository-name ${{ secrets.ECR_REPO_NAME }} | if [[ $(grep  '\"severity\": \"CRITICAL\"') ]]; then echo "CRTICAL Vulnerabilities present in this deployment"; exit 1; fi
#          aws ecr describe-image-scan-findings --image-id imageTag=build-${{ github.head_ref }}${{ github.sha }} --repository-name ${{ secrets.ECR_REPO_NAME }} | if [[ $(grep  '\"severity\": \"HIGH\"') ]]; then echo "HIGH Vulnerabilities present in this deployment"; exit 1; fi
  set-environment:
    name: Set Env
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-environment.outputs.environment }}
    steps:
      - name: Set environment based on branch
        id: set-environment
        run: |

          if [[ "$GITHUB_REF" == "refs/heads/dev" ]]; then
            ENV="dev"
          elif [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            ENV="preprod"
          elif [[ "$GITHUB_REF" =~ refs/tags/r-.* ]]; then
            ENV="prod"
          else
            echo "Unknown branch reference: $GITHUB_REF"
            exit 0
          fi

          echo "Environment: $ENV"
          echo "environment=$ENV" >> "$GITHUB_OUTPUT"
      - name: Pull infra manifests
        uses: actions/checkout@v4
        with:
          ref: main
          repository: First-Peoples-Cultural-Council/fv-infra
          token: ${{ secrets.PULL_CONFIG_SECRET }}
          path: helm
      - name: Upload Helm charts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: helm
          path: helm

  check_helm_chart_diff-dev:
      needs : [set-environment, build_with_quemu_buildx]
      name: Validate Helm Diff - Dev
      runs-on: ubuntu-latest
      if: needs.set-environment.outputs.environment == 'dev'
      environment: dev
      steps:
      -   uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      -   name: "Prep images and vars"
          uses: ./.github/actions/deploy-prep
          with:
            env: ${{ vars.ENV }}
            image_tag_prefix: ${{ vars.IMAGE_TAG_PREFIX }}
            cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
            aws_region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
            ecr_uri: ${{ secrets.FPCC_DEFAULT_ECR_URI }}
            aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
            aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
      -   name: Check helm-diff
          uses: ./.github/actions/helm-diff
          with:
            env: ${{ vars.ENV }}
            k8_namespace: ${{ secrets.DEPLOYMENT_NAMESPACE }}
            remote_helm_version: ${{ env.REMOTE_HELM_RELEASE_VERSION }}
            helm_chart_name: ${{ secrets.HELM_CHART_NAME  }}

  check_helm_chart_diff-preprod:
      needs : [set-environment, build_with_quemu_buildx ]
      name: Validate Helm Diff - PreProd
      runs-on: ubuntu-latest
      if: needs.set-environment.outputs.environment == 'preprod'
      environment: preprod
      steps:
      -   uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      -   name: "Prep images and vars"
          uses: ./.github/actions/deploy-prep
          with:
            env: ${{ vars.ENV }}
            image_tag_prefix: ${{ vars.IMAGE_TAG_PREFIX }}
            cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
            aws_region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
            ecr_uri: ${{ secrets.FPCC_DEFAULT_ECR_URI }}
            aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
            aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
      -   name: Check helm-diff
          uses: ./.github/actions/helm-diff
          with:
            env: ${{ vars.ENV }}
            k8_namespace: ${{ secrets.DEPLOYMENT_NAMESPACE }}
            remote_helm_version: ${{ env.REMOTE_HELM_RELEASE_VERSION }}
            helm_chart_name: ${{ secrets.HELM_CHART_NAME  }}

  check_helm_chart_diff-prod:
      needs : [set-environment, build_with_quemu_buildx]
      name: Validate Helm Diff - Prod
      runs-on: ubuntu-latest
      if: needs.set-environment.outputs.environment == 'prod'
      environment: prod
      steps:
      -   uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      -   name: "Prep images and vars"
          uses: ./.github/actions/deploy-prep
          with:
            env: ${{ vars.ENV }}
            image_tag_prefix: ${{ vars.IMAGE_TAG_PREFIX }}
            cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
            aws_region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
            ecr_uri: ${{ secrets.FPCC_DEFAULT_ECR_URI }}
            aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
            aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
      -   name: Check helm-diff
          uses: ./.github/actions/helm-diff
          with:
            env: ${{ vars.ENV }}
            k8_namespace: ${{ secrets.DEPLOYMENT_NAMESPACE }}
            remote_helm_version: ${{ env.REMOTE_HELM_RELEASE_VERSION }}
            helm_chart_name: ${{ secrets.HELM_CHART_NAME  }}

#  trivy_scan-dev:
#    name: Scan - Dev
#    runs-on: ubuntu-latest
#    needs : [set-environment, check_helm_chart_diff-dev]
#    if: needs.set-environment.outputs.environment == 'dev'
#    environment: dev
#    steps:
#    - uses: actions/checkout@v4
#    - name: Download Helm values file
#      uses: actions/download-artifact@v4
#      with:
#        name: helm-values
#        path: ./downloads
#    -   name: "Scan Images"
#        uses: ./.github/actions/scan
#        with:
#          env: ${{ vars.ENV }}
#          aws_region: ${{  secrets.FPCC_DEFAULT_AWS_REGION  }}
#          aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
#          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
#          aws_account: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}

  helm_upgrade-dev:
      name: Deploy - Dev
      runs-on: ubuntu-latest
      needs : [set-environment, check_helm_chart_diff-dev]
      if: needs.set-environment.outputs.environment == 'dev'
      environment: dev
      steps:
      - uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      - name: Download Helm values file
        uses: actions/download-artifact@v4
        with:
          name: helm-values
          path: ./downloads
      - name: "Deploy to Dev"
        uses: ./.github/actions/deploy
        with:
          cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
          k8_namespace: ${{  secrets.DEPLOYMENT_NAMESPACE  }}
          aws_region: ${{ secrets.FPCC_DEFAULT_AWS_REGION }}
          aws_account: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}
          aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          env: ${{  vars.ENV  }}
          helm_chart_name: ${{ secrets.HELM_CHART_NAME }}

  helm_upgrade-prod:
      name: Deploy - Prod
      runs-on: ubuntu-latest
      needs : [set-environment, check_helm_chart_diff-prod]
      if: needs.set-environment.outputs.environment == 'prod'
      environment: prod
      steps:
      -   uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      - name: Download Helm values file
        uses: actions/download-artifact@v4
        with:
          name: helm-values
          path: ./downloads
      - name: "Deploy to Prod"
        uses: ./.github/actions/deploy
        with:
          cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
          k8_namespace: ${{  secrets.DEPLOYMENT_NAMESPACE  }}
          aws_region: ${{ secrets.FPCC_DEFAULT_AWS_REGION }}
          aws_account: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}
          aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          env: ${{  vars.ENV  }}
          helm_chart_name: ${{ secrets.HELM_CHART_NAME }}

  helm_upgrade-preprod:
      name: Deploy - Preprod
      runs-on: ubuntu-latest
      needs : [set-environment, check_helm_chart_diff-preprod]
      if: needs.set-environment.outputs.environment == 'preprod'
      environment: preprod
      steps:
      -   uses: actions/checkout@v4
      - name: Download Helm charts
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: ./
      - name: Download Helm values file
        uses: actions/download-artifact@v4
        with:
          name: helm-values
          path: ./downloads
      - name: "Deploy to Preprod"
        uses: ./.github/actions/deploy
        with:
          cluster_name: ${{ secrets.FV_CLUSTER_NAME  }}
          k8_namespace: ${{  secrets.DEPLOYMENT_NAMESPACE  }}
          aws_region: ${{ secrets.FPCC_DEFAULT_AWS_REGION }}
          aws_account: ${{ secrets.FPCC_DEFAULT_CLOUD_ACCOUNT }}
          aws-secret-access-key:  ${{ secrets.FPCC_AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.FPCC_AWS_ACCESS_KEY_ID }}
          env: ${{  vars.ENV  }}
          helm_chart_name: ${{ secrets.HELM_CHART_NAME }}
