name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:

  pytest:
    name: pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11.4" ]
        group: [ 1, 2, 3, 4 ]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: test_fv_be
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.debug.txt ]; then pip install -r requirements.debug.txt; fi
      - name: Run Pytest
        working-directory: ./firstvoices
        env:
          ALLOWED_ORIGIN: ${{ secrets.ALLOWED_ORIGIN }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          pytest --cov=. --cov-config=.coveragerc firstvoices/ --splits 4 --group ${{ matrix.group }}
      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage${{ matrix.group }}
          path: .coverage

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: pytest
    strategy:
      matrix:
        python-version: [ "3.11.4" ]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: test_fv_be
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Download all artifacts
        # Downloads coverage1, coverage2, etc.
        uses: actions/download-artifact@v2
      - name: Run coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage report
          coverage xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
