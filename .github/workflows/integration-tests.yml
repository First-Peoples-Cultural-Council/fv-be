name: 'Elasticsearch tests'
description: 'Setting up BE with an elasticsearch instance to run tests against an actual server.'

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  elasticsearch-tests:
    runs-on: ubuntu-22.04
    env:
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      ALLOWED_ORIGIN: ${{ secrets.ALLOWED_ORIGIN }}
      ELASTICSEARCH_HOST: http://localhost:9200

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}

    steps:
      - uses: actions/checkout@v5
      - name: Set up python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13.2'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.debug.txt ]; then pip install -r requirements.debug.txt; fi
      - name: Setup ffmpeg
        uses: ./.github/workflows/setup-ffmpeg
      - name: Start docker-compose
        run: |
          docker compose -f docker-compose.yml up -d
      - name: Wait for ES to be up
        run: |
          for i in {1..20}; do
            status=$(curl -s http://localhost:9200/_cluster/health | jq -r .status)
            if [[ "$status" == "green" ]] || "$status" == "yellow" ]]; then
              echo "ES is up with status: $status"
              break
            fi
            echo "Waiting for ES ... ($i)"
            sleep 5
          done
      - name: Run migrations
        run: python manage.py migrate
        working-directory: ./firstvoices
      - name: Build indices
        working-directory: ./firstvoices
        run: python manage.py rebuild_index
      - name: Run ES tests
        working-directory: ./firstvoices
        run: |
          pytest --cache-clear backend/integration_tests/
