name: "Scan"
description: "Scan container images before deploy using Trivy and generate CycloneDX SBOMs"

inputs:
  env:
    required: true
  aws_region:
    required: true
  aws_account:
    required: true
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws_region }}

    - name: Login to ECR
      shell: bash
      run: |
        aws ecr get-login-password --region ${{ inputs.aws_region }} | \
        docker login --username AWS --password-stdin ${{ inputs.aws_account }}.dkr.ecr.${{ inputs.aws_region }}.amazonaws.com

    - name: Install Trivy
      shell: bash
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    - name: Ensure Python 3 and pip are available
      shell: bash
      run: |
        python3 --version || sudo apt-get install -y python3
        pip3 install -r requirements.txt || true

    - name: Scan images from YAML and generate CycloneDX SBOM
      shell: bash
      run: |
        set -euo pipefail

        FILE="./downloads/Values.${{ inputs.env }}.yaml"

        if [[ ! -f "$FILE" ]]; then
          echo "ERROR: File $FILE not found"
          exit 1
        fi

        echo "🔍 Extracting image references from $FILE..."
        grep -oE '[^ ]+@sha256:[a-f0-9]+' "$FILE" | while read -r IMAGE; do
          FILENAME=$(echo "$IMAGE" | tr '/:@' '___')

          echo "============================================================"
          echo "Scanning $IMAGE"

          trivy image --scanners vuln,secret,config,license \
            --format table \
            --ignore-unfixed \
            --skip-dirs /proc,/sys \
            --timeout 10m \
            --severity HIGH,CRITICAL \
            --vuln-type os,library --exit-code 1 "$IMAGE"

          trivy image --scanners vuln,secret,config,license \
            --format cyclonedx \
            --ignore-unfixed \
            --skip-dirs /proc,/sys \
            --timeout 10m \
            --severity HIGH,CRITICAL \
            --vuln-type os,library \
            --exit-code 1 "$IMAGE" > "${FILENAME}_scan_cbom.json"

          echo "Scanning $IMAGE completed"
          echo "============================================================"
        done

    - name: Print CycloneDX Dependency Trees
      shell: bash
      run: |
        set -euo pipefail

        FILE="./downloads/Values.${{ inputs.env }}.yaml"

        grep -oE '[^ ]+@sha256:[a-f0-9]+' "$FILE" | while read -r IMAGE; do
          FILENAME=$(echo "$IMAGE" | tr '/:@' '___')
          echo "Dependency Tree for $IMAGE:"
          python3 ./tree.py "${FILENAME}_scan_cbom.json"
          echo
        done
