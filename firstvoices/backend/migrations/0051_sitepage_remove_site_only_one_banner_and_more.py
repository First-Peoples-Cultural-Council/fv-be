# Generated by Django 4.2.3 on 2023-07-13 23:38

import backend.models.validators
import backend.permissions.managers
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import re
import rules.contrib.models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("backend", "0050_merge_20230713_1142"),
    ]

    operations = [
        migrations.CreateModel(
            name="SitePage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "last_modified",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "visibility",
                    models.IntegerField(
                        choices=[(0, "Team"), (10, "Members"), (20, "Public")],
                        default=0,
                    ),
                ),
                ("title", models.CharField(max_length=225)),
                (
                    "slug",
                    models.SlugField(
                        max_length=200,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[-a-zA-Z0-9_]+\\Z"),
                                "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                                "invalid",
                            ),
                            backend.models.validators.reserved_site_page_slug_validator,
                        ],
                    ),
                ),
                ("subtitle", models.CharField(blank=True, max_length=225)),
            ],
            options={
                "verbose_name": "site page",
                "verbose_name_plural": "site pages",
            },
            bases=(
                backend.permissions.managers.PermissionFilterMixin,
                rules.contrib.models.RulesModelMixin,
                models.Model,
            ),
        ),
        migrations.RemoveConstraint(
            model_name="site",
            name="only_one_banner",
        ),
        migrations.AddConstraint(
            model_name="site",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("banner_image__isnull", True),
                    ("banner_video__isnull", True),
                    _connector="OR",
                ),
                name="site_only_one_banner",
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="banner_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sitepage_set",
                to="backend.image",
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="banner_video",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sitepage_set",
                to="backend.video",
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="created_by",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_%(app_label)s_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="last_modified_by",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="modified_%(app_label)s_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="site",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_set",
                to="backend.site",
            ),
        ),
        migrations.AddField(
            model_name="sitepage",
            name="widgets",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sitepage_set",
                to="backend.sitewidgetlist",
            ),
        ),
        migrations.AddConstraint(
            model_name="sitepage",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("banner_image__isnull", True),
                    ("banner_video__isnull", True),
                    _connector="OR",
                ),
                name="sitepage_only_one_banner",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="sitepage",
            unique_together={("site", "slug")},
        ),
    ]
