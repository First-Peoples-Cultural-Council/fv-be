# Generated by Django 4.2.2 on 2023-07-28 19:01

import backend.permissions.managers
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import rules.contrib.models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("backend", "0056_alter_sitepage_widgets"),
    ]

    operations = [
        migrations.CreateModel(
            name="StoryPage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "last_modified",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "ordering",
                    models.SmallIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("text", models.TextField(max_length=1000)),
                ("translation", models.TextField(blank=True, max_length=1000)),
                (
                    "notes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(max_length=1000),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(app_label)s_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_modified_by",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_%(app_label)s_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_audio",
                    models.ManyToManyField(blank=True, to="backend.audio"),
                ),
                (
                    "related_images",
                    models.ManyToManyField(blank=True, to="backend.image"),
                ),
                (
                    "related_videos",
                    models.ManyToManyField(blank=True, to="backend.video"),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="backend.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "story page",
                "verbose_name_plural": "story pages",
                "ordering": ("ordering",),
            },
            bases=(
                backend.permissions.managers.PermissionFilterMixin,
                rules.contrib.models.RulesModelMixin,
                models.Model,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="song",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="story",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="story",
            name="author",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="story",
            name="hide_overlay",
            field=models.BooleanField(default=False),
        ),
        migrations.DeleteModel(
            name="Page",
        ),
        migrations.AddField(
            model_name="storypage",
            name="story",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pages",
                to="backend.story",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="storypage",
            unique_together={("story", "ordering")},
        ),
    ]
